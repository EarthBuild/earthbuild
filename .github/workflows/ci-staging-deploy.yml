name: staging release

on:
  push:
    branches:
      - 'main'
      - '**-staging-test'
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.github/renovate.json5'
      - '.github/CODEOWNERS'
      - 'LICENSE'

jobs:
  build-earthly:
    permissions: write-all
    uses: ./.github/workflows/build-earthly.yml
    with:
      BUILT_EARTHLY_PATH: "./build/linux/amd64/earthly"
      RUNS_ON: "ubuntu-latest"
      BINARY: "docker"
      SUDO: ""
    secrets: inherit
  prepare-release:
    name: prepare release
    needs: build-earthly
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      release_tag: ${{ steps.compute-tag.outputs.release_tag }}
      earthly_next: ${{ steps.read-next.outputs.earthly_next }}
    env:
      FORCE_COLOR: 1
      GITHUB_USER: "earthbuild"
      EARTHLY_REPO: "earthbuild-staging"
      DOCKERHUB_USER: ${{ vars.DOCKERHUB_USERNAME }}
      DOCKERHUB_IMG: "earthbuild-staging"
      DOCKERHUB_BUILDKIT_IMG: "buildkitd-staging"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  #v5.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Retrieve earthbuild from build-earthly job
        run: |
          BUILDKITD_IMAGE=docker.io/earthbuild/buildkitd-staging TAG=${GITHUB_SHA}-ubuntu-latest-docker ./earthly upgrade
          mkdir -p $(dirname "./build/linux/amd64/earthly")
          mv ${HOME}/.earthly/earthly-${GITHUB_SHA}-ubuntu-latest-docker ./build/linux/amd64/earthly
      - name: Compute release tag
        id: compute-tag
        run: |-
          set -euo pipefail
          RELEASE_TAG="$(git rev-parse --short=8 HEAD)"
          echo "release_tag=$RELEASE_TAG" >> "$GITHUB_OUTPUT"
      - name: Read earthly-next sha
        id: read-next
        run: |-
          set -euo pipefail
          echo "earthly_next=$(cat earthly-next)" >> "$GITHUB_OUTPUT"

  release-image:
    name: release dockerhub (main)
    needs: [build-earthly, prepare-release]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      FORCE_COLOR: 1
      DOCKERHUB_USER: ${{ vars.DOCKERHUB_USERNAME }}
      DOCKERHUB_IMG: "earthbuild-staging"
      DOCKERHUB_BUILDKIT_IMG: "buildkitd-staging"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  #v5.0.0
        with:
          fetch-depth: 0
      - name: Retrieve earthbuild from build-earthly job
        run: |-
          BUILDKITD_IMAGE=docker.io/earthbuild/buildkitd-staging TAG=${GITHUB_SHA}-ubuntu-latest-docker ./earthly upgrade
          mkdir -p $(dirname "./build/linux/amd64/earthly")
          mv ${HOME}/.earthly/earthly-${GITHUB_SHA}-ubuntu-latest-docker ./build/linux/amd64/earthly
      - name: Release to DockerHub (main)
        env:
          RELEASE_TAG: ${{ needs.prepare-release.outputs.release_tag }}
        run: |-
          set -euo pipefail
          ./build/linux/amd64/earthly --push \
            ./release+release-dockerhub \
            --DOCKERHUB_USER="${{ env.DOCKERHUB_USER }}" \
            --DOCKERHUB_IMG="${{ env.DOCKERHUB_IMG }}" \
            --DOCKERHUB_BUILDKIT_IMG="${{ env.DOCKERHUB_BUILDKIT_IMG }}" \
            --PUSH_PRERELEASE_TAG="true" \
            --PUSH_LATEST_TAG="false" \
            --RELEASE_TAG="${{ env.RELEASE_TAG }}"

  release-ticktock-image:
    name: release dockerhub (ticktock)
    needs: [build-earthly, prepare-release]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      FORCE_COLOR: 1
      DOCKERHUB_USER: ${{ vars.DOCKERHUB_USERNAME }}
      DOCKERHUB_IMG: "earthbuild-staging"
      DOCKERHUB_BUILDKIT_IMG: "buildkitd-staging"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  #v5.0.0
        with:
          fetch-depth: 0
      - name: Retrieve earthbuild from build-earthly job
        run: |-
          BUILDKITD_IMAGE=docker.io/earthbuild/buildkitd-staging TAG=${GITHUB_SHA}-ubuntu-latest-docker ./earthly upgrade
          mkdir -p $(dirname "./build/linux/amd64/earthly")
          mv ${HOME}/.earthly/earthly-${GITHUB_SHA}-ubuntu-latest-docker ./build/linux/amd64/earthly
      - name: Release to DockerHub (ticktock)
        env:
          RELEASE_TAG: ${{ needs.prepare-release.outputs.release_tag }}
          EARTHLY_NEXT: ${{ needs.prepare-release.outputs.earthly_next }}
        run: |-
          set -euo pipefail
          ./build/linux/amd64/earthly --push \
            ./release+release-dockerhub \
            --DOCKERHUB_USER="${{ env.DOCKERHUB_USER }}" \
            --DOCKERHUB_IMG="${{ env.DOCKERHUB_IMG }}" \
            --DOCKERHUB_BUILDKIT_IMG="${{ env.DOCKERHUB_BUILDKIT_IMG }}" \
            --PUSH_PRERELEASE_TAG="false" \
            --PUSH_LATEST_TAG="false" \
            --RELEASE_TAG="${{ env.RELEASE_TAG }}-ticktock" \
            --BUILDKIT_PROJECT=github.com/earthbuild/buildkit:${{ env.EARTHLY_NEXT }}

  release-binaries:
    name: release github
    needs: [build-earthly, prepare-release]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      FORCE_COLOR: 1
      GITHUB_USER: "earthbuild"
      EARTHLY_REPO: "earthbuild-staging"
      DOCKERHUB_USER: ${{ vars.DOCKERHUB_USERNAME }}
      DOCKERHUB_BUILDKIT_IMG: "buildkitd-staging"
    steps:
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  #v5.0.0
        with:
          fetch-depth: 0
      - name: Retrieve earthbuild from build-earthly job
        run: |-
          BUILDKITD_IMAGE=docker.io/earthbuild/buildkitd-staging TAG=${GITHUB_SHA}-ubuntu-latest-docker ./earthly upgrade
          mkdir -p $(dirname "./build/linux/amd64/earthly")
          mv ${HOME}/.earthly/earthly-${GITHUB_SHA}-ubuntu-latest-docker ./build/linux/amd64/earthly
      - name: Get fresh GitHub App installation token
        id: app-token-release
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42
        with:
          app-id: ${{ secrets.RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}
          owner: earthbuild
      # This step creates earthly binaries for all platforms plus signature files for them under
      # the ./release/release/ dir
      - name: Create Release Binaries
        env:
          GITHUB_TOKEN: ${{ steps.app-token-release.outputs.token }}
          GPG_PRIVATE: ${{ secrets.GPG_PRIVATE }}
          RELEASE_TAG: ${{ needs.prepare-release.outputs.release_tag }}
        run: |-
          set -euo pipefail
          ./build/linux/amd64/earthly --push \
            --secret GITHUB_TOKEN="$GITHUB_TOKEN" \
            --secret GPG_PRIVATE="$GPG_PRIVATE" \
            ./release+signed-release \
            --DOCKERHUB_HOST="ghcr.io" \
            --GITHUB_USER="${{ env.GITHUB_USER }}" \
            --EARTHLY_REPO="${{ env.EARTHLY_REPO }}" \
            --DOCKERHUB_USER="${{ env.DOCKERHUB_USER }}" \
            --DOCKERHUB_BUILDKIT_IMG="${{ env.DOCKERHUB_BUILDKIT_IMG }}" \
            --RELEASE_TAG="${{ env.RELEASE_TAG }}" \
            --PRERELEASE=false

